{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/guard/auth.guard.ts","webpack:///./src/app/guard/prevent-unsaved-changes.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/members/member-messages/member-messages.component.css","webpack:///./src/app/members/member-messages/member-messages.component.html","webpack:///./src/app/members/member-messages/member-messages.component.ts","webpack:///./src/app/members/photo-editor/photo-editor.component.css","webpack:///./src/app/members/photo-editor/photo-editor.component.html","webpack:///./src/app/members/photo-editor/photo-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/models/Pagination.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/resolvers/lists.resolver.ts","webpack:///./src/app/resolvers/member-detail.resolver.ts","webpack:///./src/app/resolvers/member-edit.resolver.ts","webpack:///./src/app/resolvers/member-list.resolver.ts","webpack:///./src/app/resolvers/message.resolver.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/services/alertify.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/error.interceptor.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-nav></app-nav>\\n<router-outlet></router-outlet>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { User } from './models/User';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit  {\n  defaultPhotoUrl = '../assets/user.png';\n\n  constructor(private authService: AuthService, private jwtHelperService: JwtHelperService) {}\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (token) {\n      this.authService.decodedToken = this.jwtHelperService.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user;\n      if (this.authService.currentUser != null) {\n        this.authService.changeMemberPhoto(user.photoURL);\n      } else {\n        this.authService.changeMemberPhoto(this.defaultPhotoUrl);\n      }\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDropdownModule, TabsModule, BsDatepickerModule, ButtonsModule, PaginationModule } from 'ngx-bootstrap';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { TimeAgoPipe } from 'time-ago-pipe';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AlertifyService } from './services/alertify.service';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { RouterModule } from '@angular/router';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './guard/auth.guard';\nimport { UserService } from './services/user.service';\nimport { MemberDetailResolver } from './resolvers/member-detail.resolver';\nimport { MemberListResolver } from './resolvers/member-list.resolver';\nimport { ListsResolver } from './resolvers/lists.resolver';\nimport { MessagesResolver } from './resolvers/message.resolver';\nimport { MemberEditResolver } from './resolvers/member-edit.resolver';\nimport { PreventUnsavedChanges } from './guard/prevent-unsaved-changes.guard';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ErrorInterceptorProvider } from './services/error.interceptor';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    ListsComponent,\n    MessagesComponent,\n    MemberCardComponent,\n    MemberDetailComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TimeAgoPipe,\n    MemberMessagesComponent\n],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDropdownModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: () => {\n          return localStorage.getItem('token');\n        },\n        whitelistedDomains: ['localhost:5000'],\n        blacklistedRoutes: ['localhost:5000/api/auth/']\n      }\n    })\n  ],\n  providers: [\n    AuthService,\n    AlertifyService,\n    AuthGuard,\n    UserService,\n    MemberDetailResolver,\n    MemberListResolver,\n    MemberEditResolver,\n    PreventUnsavedChanges,\n    ListsResolver,\n    MessagesResolver,\n    ErrorInterceptorProvider\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Routes, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router, private alertifyService: AlertifyService) {}\n\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.alertifyService.error('You need to login to access this feature');\n    this.router.navigate(['./home']);\n    return false;\n  }\n}\n","import { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { CanDeactivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PreventUnsavedChanges implements CanDeactivate <MemberEditComponent> {\n\n    canDeactivate(component: MemberEditComponent) {\n        if (component.editForm.dirty) {\n            return confirm('You have unsaved changes on the page. Continue?');\n        }\n        return true;\n    }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"!registerMode\\\" class=\\\"container d-flex w-10 h-100 p-5 mx-auto flex-column text-center\\\">\\n  <main role=\\\"main\\\" class=\\\"inner cover\\\">\\n    <h1 class=\\\"cover-heading\\\">You can do better.</h1>\\n      <p class=\\\"lead\\\">Because life is more than just sitting around and playing video games. We care about you and your future. Come in to view your matches. All you need to do is sign up!</p>\\n      <p class=\\\"lead\\\">\\n        <a class=\\\"btn btn-lg btn-secondary\\\" (click)=\\\"toggleRegister()\\\">Register</a>\\n      </p>\\n  </main>\\n</div>\\n\\n<div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n  <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggleRegister() {\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(registerMode: boolean) {\n    this.registerMode = registerMode;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row equal py-3\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio = \\\"Likers\\\" (click)=\\\"loadUsers()\\\">Members who like me</button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio = \\\"Likees\\\" (click)=\\\"loadUsers()\\\">Members who I like</button>\\n    </div>\\n  </div>\\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I liked'}} : {{pagination.totalItems}}</h2>\\n</div>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row equal\\\">\\n      <div *ngFor='let user of users' class=\\\"col-sm-3 mt-4\\\">\\n        <app-member-card [user]='user'></app-member-card>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container py-3 my-5 \\\" *ngIf=\\\"users.length > pagination.itemsPerPage\\\">\\n    <div class=\\\"text-center\\\">\\n      <pagination class=\\\"d-inline-flex\\\" [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" (pageChanged)=\\\"pageChanged($event)\\\"\\n        [itemsPerPage]=\\\"pagination.itemsPerPage\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n      </pagination>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/User';\nimport { Pagination, PaginatedResult } from '../models/Pagination';\nimport { AlertifyService } from '../services/alertify.service';\nimport { UserService } from '../services/user.service';\nimport { AuthService } from '../services/auth.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n      .subscribe((res: PaginatedResult<User[]>) => {\n        this.users = res.result;\n        this.pagination = res.pagination;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n}\n","module.exports = \".card {\\n    margin-bottom: 1.875rem;\\n    border: none;\\n    border-radius: 0;\\n    box-shadow: 0 10px 40px 0 rgba(62, 57, 107, 0.07), 0 2px 9px 0 rgba(62, 57, 107, 0.06);\\n}\\n\\n.card-body {\\n    padding: 5px;\\n}\\n\\n.card-body img {\\n    width: 100%;\\n}\\n\\nh6 {\\n    font-size: 16px;\\n    font-weight: 700;\\n    color: #3a3c41;\\n    margin-top: 1px;\\n    margin-bottom: 1px;\\n}\\n\\n/* h6 small {\\n    font-weight: bold;\\n    font-size: 12px;\\n    font-style: italic;\\n} */\\n\\nimg {\\n    -webkit-transform: scale(1, 1);\\n            transform: scale(1, 1);\\n    transition-duration: 500ms;\\n    transition-timing-function: ease-out;\\n}\\n\\n.card:hover img {\\n    transition-duration: 500ms;\\n    transition-timing-function: ease-out;\\n    opacity: 0.8;\\n}\\n\\n.zoom {\\n    overflow: hidden;\\n    position: relative;\\n}\\n\\n.member-icons {\\n    position: absolute;\\n    bottom: -30%;\\n    left: 0;\\n    right: 0;\\n    margin-right: auto;\\n    margin-left: auto;\\n    opacity: 0;\\n}\\n\\n.card:hover .member-icons {\\n    bottom: 0;\\n    opacity: 1;\\n}\\n\\n.animate {\\n    transition: all 0.3s ease-in-out;\\n}\\n\\na {\\n    color: rgb(0, 156, 220);\\n    transition: all 0.3s ease-out;\\n}\\n\\na:hover {\\n    -webkit-transform: scale(1.4, 1.4);\\n            transform: scale(1.4, 1.4);\\n    transition-duration: 500ms;\\n    transition-timing-function: ease-out;\\n    transition: all 0.3s ease-in-out;\\n}\\n\\n.border-blue.border-lighten-2 {\\n    border: 1px solid #64B5F6 !important;\\n}\"","module.exports = \"<!-- <div class=\\\"card\\\">\\n  <div class=\\\"zoom\\\">\\n      <img src=\\\"{{user.photoURL ? user.photoURL: '../../../assets/user.png' }}\\\" alt=\\\"{{user.knownAs}}\\\" class=\\\"card-img-top\\\"/>\\n      <ul class=\\\"list-inline member-icons animate text-center nav nav-bar\\\">\\n        <li><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members', user.id]\\\" routerLinkActive=\\\"router-link-active\\\" ><i class=\\\"fa fa-user\\\"></i></button></li>\\n        <li><button class=\\\"btn btn-primary\\\" (click)=\\\"sendLike(user.id)\\\"><i class=\\\"fa fa-heart\\\"></i></button></li>\\n        <li><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members', user.id]\\\" [queryParams]=\\\"{tab:'3'}\\\"><i class=\\\"fa fa-envelope\\\"></i></button></li>\\n      </ul>\\n  </div>\\n  <div class=\\\"card-body text-center\\\">\\n    <h6 class=\\\"card-title\\\"><i class=\\\"fa fa-user\\\"></i> {{user.knownAs}}, {{user.age}}</h6>\\n    <h6 class=\\\"text-muted\\\"><small>{{user.city}}</small></h6>\\n  </div>\\n</div> -->\\n\\n<div class=\\\"col-20\\\">\\n  <div class=\\\"card border-blue border-lighten-2\\\">\\n    <div class=\\\"text-center\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"rounded-circle\\\" style=\\\"background-color: #593196\\\">\\n            <img src=\\\"{{user.photoURL}}\\\" class=\\\"rounded-circle  height-150\\\" alt=\\\"Card image\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title\\\">{{user.knownAs + ', ' + user.age}}</h4>\\n        <h6 class=\\\"card-subtitle text-muted\\\">{{user.city + ', ' + user.country}}</h6>\\n      </div>\\n      <div class=\\\"text-center\\\">\\n        <a class=\\\"btn\\\" [routerLink]=\\\"['/members', user.id]\\\" routerLinkActive=\\\"router-link-active\\\">\\n          <span title=\\\"{{user.knownAs}}'s Profile\\\" class=\\\"fa fa-user\\\"></span>\\n        </a>\\n        <a class=\\\"btn\\\" (click)=\\\"sendLike(user.id)\\\">\\n          <span title=\\\"Heart {{user.knownAs}}\\\" class=\\\"fa fa-heart\\\" style=\\\"color: rgb(0, 156, 220)\\\"></span>\\n        </a>\\n        <a class=\\\"btn\\\" [routerLink]=\\\"['/members', user.id]\\\" [queryParams]=\\\"{tab:'3'}\\\">\\n          <span title=\\\"Message\\\" class=\\\"fa fa-envelope\\\"></span>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../../models/User';\nimport { AuthService } from '../../services/auth.service';\nimport { UserService } from '../../services/user.service';\nimport { AlertifyService } from '../../services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n\n  @Input() user: User;\n  constructor(private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n      this.alertify.success('You have liked ' + this.user.knownAs);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","module.exports = \".container {\\n    margin: 30px;\\n}\\n\\n.card-header, .card-footer {\\n    background-color: white;\\n    border-top: none;\\n    padding: 10px 10px;\\n}\\n\\n.img-thumbnail {\\n    margin: 25px;\\n    width: 85%;\\n    height: 85%;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{user?.knownAs}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card flex-wrap\\\">\\n        <!-- <div class=\\\"card-header border-0 m-0\\\">\\n            <img src=\\\"{{user?.photoURL}}\\\" alt=\\\"{{user?.knownAs}}\\\" class=\\\"img-thumbnail\\\">\\n        </div>       -->\\n        <img src=\\\"{{user.photoURL ? user.photoURL: '../../../assets/user.png' }}\\\" alt=\\\"{{user?.knownAs}}\\\" class=\\\"card-img-top img-fluid img-thumbnail\\\">\\n        <div class=\\\"card-body\\\" style=\\\"padding-bottom: 0rem;\\\">\\n          <div>\\n            <strong>Location: </strong>\\n            <p>{{user?.city}}, {{user?.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age: </strong>\\n            <p>{{user?.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last active: </strong>\\n            <p>{{user.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member since: </strong>\\n            <p>{{user.created | date: 'mediumDate'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group-justified\\\" style=\\\"width: 100%\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button class=\\\"btn-success btn-lg rounded\\\">Like</button>\\n            </div>\\n            <div class=\\\"btn-group\\\">\\n              <button class=\\\"btn-primary btn-lg rounded\\\" (click)=\\\"selectTab(3)\\\">Message</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <!-- <div class=\\\"tab-panel\\\"> -->\\n          <tabset #staticTabs class=\\\"member-tabset\\\">\\n              <tab heading=\\\"About {{user?.knownAs}}\\\">\\n                <h4>Description</h4>\\n                <p>{{user?.introduction}}</p>\\n                <h4>Looking For</h4>\\n                <p>{{user?.lookingFor}}</p>\\n              </tab>\\n              <tab heading=\\\"Interests\\\">\\n                <h4>Interests</h4>\\n                <p>{{user?.interests}}</p>\\n              </tab>\\n              <tab heading=\\\"Photos\\\">\\n                <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n              </tab>\\n              <tab heading=\\\"Messages\\\">\\n                <app-member-messages [userId]=\\\"user.id\\\"></app-member-messages>\\n              </tab>\\n          </tabset>\\n      <!-- </div> -->\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { AlertifyService } from '../../services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../../models/User';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  @ViewChild('staticTabs') staticTabs: TabsetComponent;\n\n  constructor(private userService: UserService, private alertify: AlertifyService, private route: ActivatedRoute) { }\n\n  getImages() {\n    const imageURLs = [];\n    for (let i = 0; i < this.user.photos.length; i++) {\n      imageURLs.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        description: this.user.photos[i].description\n      });\n    }\n    return imageURLs;\n  }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n    this.route.queryParams.subscribe(params => {\n      this.selectTab(params['tab']);\n    });\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ];\n    this.galleryImages = this.getImages();\n  }\n\n  selectTab(tabId: number) {\n    this.staticTabs.tabs[tabId > 0 ? tabId : 0].active = true;\n  }\n}\n","module.exports = \".container {\\n    margin: 30px;\\n}\\n\\n.card-header, .card-footer {\\n    background-color: white;\\n    border-top: none;\\n    padding: 10px 10px;\\n}\\n\\n.img-thumbnail {\\n    margin: 25px;\\n    width: 85%;\\n    height: 85%;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <h1>Your Profile</h1>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div [hidden]=\\\"!editForm.dirty\\\" class=\\\"alert alert-info\\\">\\n        <p>\\n          <strong>Warning</strong> You have made changes. Any unsaved changes you make will be lost!\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card flex-wrap\\\">\\n        <img src=\\\"{{photoUrl}}\\\" alt=\\\"{{user?.knownAs}}\\\" class=\\\"card-img-top img-fluid img-thumbnail\\\">\\n        <div class=\\\"card-body\\\" style=\\\"padding-bottom: 0rem;\\\">\\n          <div>\\n            <strong>Location: </strong>\\n            <p>{{user?.city}}, {{user?.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age: </strong>\\n            <p>{{user?.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last active: </strong>\\n            <p>{{user.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member since: </strong>\\n            <p>{{user.created | date: 'mediumDate'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button form=\\\"editForm\\\" [disabled]=\\\"!editForm.dirty\\\" class=\\\"btn-success btn-block btn-lg rounded\\\">Save Changes</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\">\\n          <tab heading=\\\"Edit Profile\\\">\\n            <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n              <h4>Description</h4>\\n              <textarea name=\\\"introduction\\\" class=\\\"form-control\\\" rows=6 [(ngModel)]=\\\"user.introduction\\\">{{user.introduction}}</textarea>\\n              <h4>Looking For</h4>\\n              <textarea name=\\\"lookingFor\\\" class=\\\"form-control\\\" rows=6 [(ngModel)]=\\\"user.lookingFor\\\">{{user.lookingFor}}</textarea>\\n              <h4>Interests</h4>\\n              <textarea name=\\\"interests\\\" class=\\\"form-control\\\" rows=6 [(ngModel)]=\\\"user.interests\\\">{{user.interests}}</textarea>\\n              <h4>Location</h4>\\n              <div class=\\\"form-inline\\\">\\n                <label for=\\\"city\\\">City</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\n                <label for=\\\"country\\\">Country</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\n              </div>\\n            </form>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <app-photo-editor [photos]=\\\"user.photos\\\" (getMemberPhotoChange) = 'updateMainPhoto($event)'></app-photo-editor>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from '../../models/User';\nimport { UserService } from '../../services/user.service';\nimport { AlertifyService } from '../../services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  user: User;\n  @ViewChild('editForm') editForm: NgForm;\n  photoUrl: string;\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute,\n    private authService: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data  => {\n      this.user = data['user'];\n    });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(action => {\n      this.editForm.reset(this.user);\n      this.alertify.success('Changes saved successfully');\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  updateMainPhoto(photoUrl: string) {\n    this.user.photoURL = photoUrl;\n  }\n\n}\n","module.exports = \".equal {\\n    display: flex;\\n    flex-flow: row wrap;\\n    align-content: flex-end;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row p-3 text-center\\\">\\n    <div class=\\\"text-center\\\">\\n      <h2>Your matches - {{pagination.totalItems}} found</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"row p-3\\\">\\n    <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" novalidate>\\n      <div class=\\\"form-group mx-1\\\">\\n        <label for=\\\"minAge\\\">Age From</label>\\n        <input type=\\\"number\\\" class=\\\"form-control mx-1\\\" style=\\\"width: 70px\\\" id=\\\"minAge\\\" name=\\\"minAge\\\" [(ngModel)]=\\\"userParams.minAge\\\">\\n      </div>\\n\\n      <div class=\\\"form-group mx-1\\\">\\n        <label for=\\\"maxAge\\\">Age To</label>\\n        <input type=\\\"number\\\" class=\\\"form-control mx-1\\\" style=\\\"width: 70px\\\" id=\\\"maxAge\\\" name=\\\"maxAge\\\" [(ngModel)]=\\\"userParams.maxAge\\\">\\n      </div>\\n\\n      <div class=\\\"form-group mx-1\\\">\\n        <label for=\\\"gender\\\">Show: </label>\\n        <select class=\\\"form-control mx-1\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\" name=\\\"gender\\\" [(ngModel)]=\\\"userParams.gender\\\">\\n          <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n            {{gender.display}}\\n          </option>\\n        </select>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left:10px\\\" (click)=\\\"resetFilters()\\\">Reset Filter</button>\\n    </form>\\n    <div class=\\\"ml-4 pull-right\\\">\\n        <label style=\\\"margin-right: 10px\\\">Order By: </label>\\n        <div class=\\\"btn-group\\\">\\n          <button type=\\\"button\\\" [(ngModel)]=\\\"userParams.orderBy\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\" btnRadio=\\\"lastActive\\\" (click)=\\\"loadUsers()\\\">Last Active</button>\\n          <button type=\\\"button\\\" [(ngModel)]=\\\"userParams.orderBy\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\" btnRadio=\\\"created\\\" (click)=\\\"loadUsers()\\\">Newest Members</button>\\n        </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row equal\\\">\\n    <div *ngFor='let user of users' class=\\\"col-sm-3 mt-4\\\">\\n      <app-member-card [user]='user'></app-member-card>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container py-3 my-5 \\\">\\n  <div class=\\\"text-center\\\">\\n    <pagination class=\\\"d-inline-flex\\\" [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" (pageChanged)=\\\"pageChanged($event)\\\"\\n      [itemsPerPage]=\\\"pagination.itemsPerPage\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n    </pagination>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/User';\nimport { Pagination, PaginatedResult } from '../../models/Pagination';\nimport { AlertifyService } from '../../services/alertify.service';\nimport { UserService } from '../../services/user.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genderList = [{value: 'female', display: 'Female'}, {value: 'male', display: 'Male'}];\n  userParams: any = {};\n  pagination: Pagination;\n  constructor(private userService: UserService, private alertifyService: AlertifyService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  loadUsers() {\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n      .subscribe((res: PaginatedResult<User[]>) => {\n        this.users = res.result;\n        this.pagination = res.pagination;\n      }, error => {\n        this.alertifyService.error(error);\n      });\n  }\n\n  resetFilters() {\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n}\n","module.exports = \".card {\\n    border: none;\\n}\\n\\n.chat {\\n    list-style: none;\\n    margin: 0;\\n    padding: 0;\\n}\\n\\n.chat li {\\n    margin-bottom: 10px;\\n    padding-bottom: 10px;\\n    border-bottom: 1px dotted #b3a9a9;\\n}\\n\\n.rounded-circle {\\n    height: 50px;\\n    width: 50px;\\n}\\n\\n.card-body {\\n    overflow-y: scroll;\\n    height: 400px;\\n}\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"messages?.length === 0\\\">\\n      <p>No messages yet... Get talking you two!</p>\\n    </div>\\n\\n    <ul class=\\\"chat\\\">\\n      <li *ngFor=\\\"let message of messages\\\">\\n        <!-- to them -->\\n        <div *ngIf=\\\"message.senderId == userId\\\">\\n          <span class=\\\"chat-img pull-left\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <strong class=\\\"primary-font\\\">{{message.senderKnownAs}}</strong>\\n              <small class=\\\"text-muted pull-right\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n              </small>\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n\\n\\n        <!-- to me -->\\n        <div *ngIf=\\\"message.senderId != userId\\\">\\n            <span class=\\\"chat-img pull-right\\\">\\n              <img src=\\\"{{message.senderPhotoUrl}}\\\" class=\\\"rounded-circle\\\">\\n            </span>\\n            <div class=\\\"chat-body\\\">\\n              <div class=\\\"header\\\">\\n                  <small class=\\\"text-muted\\\">\\n                      <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n                      <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-muted text-danger\\\">(Unread)</span>\\n                      <span *ngIf=\\\"message.isRead\\\" class=\\\"text-muted text-success\\\">(Read {{message.dateRead | timeAgo}})</span>\\n                    </small>\\n                <strong class=\\\"primary-font pull-right\\\">{{message.senderKnownAs}}</strong>\\n              </div>\\n              <p>{{message.content}}</p>\\n            </div>\\n          </div>\\n  \\n      </li>\\n    </ul>\\n\\n  </div>\\n  <div class=\\\"card-footer\\\">\\n      <!-- <section class=\\\"chat-app-form\\\">\\n          <form class=\\\"chat-app-input d-flex\\\">\\n            <fieldset class=\\\"form-group position-relative has-icon-left col-10 m-0\\\">\\n              <div class=\\\"form-control-position\\\">\\n                <i class=\\\"icon-emoticon-smile\\\"></i>\\n              </div>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"iconLeft4\\\" placeholder=\\\"Type your message\\\">\\n              <div class=\\\"form-control-position control-position-right\\\">\\n                <i class=\\\"ft-image\\\"></i>\\n              </div>\\n            </fieldset>\\n            <fieldset class=\\\"form-group position-relative has-icon-left col-2 m-0\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-paper-plane-o d-lg-none\\\"></i>\\n                <span class=\\\"d-none d-lg-block\\\">Send</span>\\n              </button>\\n            </fieldset>\\n          </form>\\n        </section> -->\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"messageForm.valid && sendMessage()\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" \\n          class=\\\"form-control input-sm\\\" \\n          required\\n          name=\\\"content\\\"\\n          [(ngModel)]=\\\"newMessage.content\\\"\\n          placeholder=\\\"Type your message\\\">\\n        <span class=\\\"input-group-btn\\\">\\n          <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!messageForm.valid\\\">Send</button>\\n        </span>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { AlertifyService } from '../../services/alertify.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Message } from '../../models/Message';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() userId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService.getMessagesThread(this.authService.decodedToken.nameid, this.userId)\n      .pipe(\n        tap(messages => {\n          for (let i = 0; i < messages.length; i++) {\n            if (messages[i].isRead === false && messages[i].recipientId === currentUserId) {\n              this.userService.markAsRead(currentUserId, messages[i].id);\n            }\n          }\n        })\n      )\n      .subscribe(messages => {\n        this.messages = messages;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId = this.userId;\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage).subscribe(message => {\n      this.messages.push(message);\n      this.newMessage.content = '';\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n}\n","module.exports = \".img-thumbnail {\\n    height: 100px;\\n    width: 100px;\\n    margin-bottom: 4px;\\n}\\n\\n.row {\\n    margin-bottom: 10px;\\n}\\n\\n.my-drop-zone { \\n    border: dotted 3px lightgray; \\n}\\n\\n.nv-file-over { \\n    border: dotted 3px red; \\n}\\n\\n.another-file-over-class { \\n    border: dotted 3px green; \\n}\\n\\ninput[type=file] {\\n    color: transparent;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2 text-center\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{photo.url}}\\\" alt=\\\"{{photo.description}}\\\" class=\\\"img-thumbnail\\\">\\n    <div class=\\\"btn-group btn-group-sm\\\">\\n        <button class=\\\"btn btn-xs btn-primary\\\" \\n            (click)=\\\"setMainPhoto(photo)\\\"\\n            [disabled]=\\\"photo.isMain\\\"\\n            [ngClass]=\\\"photo.isMain ? 'btn-success' : 'btn-default'\\\">Main</button>\\n        <button class=\\\"btn btn-xs btn-danger\\\" (click)=\\\"deletePhoto(photo.id)\\\" [disabled]=\\\"photo.isMain\\\"><i class=\\\"fa fa-trash-o\\\"></i></button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n \\n  <div class=\\\"col-md-3\\\">\\n\\n      <h3>Select photos</h3>\\n\\n      <div ng2FileDrop\\n           [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n           (fileOver)=\\\"fileOverBase($event)\\\"\\n           [uploader]=\\\"uploader\\\"\\n           class=\\\"card card-block my-drop-zone py-4 px-2 m-2\\\">\\n          Drop photos here\\n      </div>\\n\\n      Multiple\\n      <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\n\\n      Single\\n      <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n  </div>\\n\\n  <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px;\\\" *ngIf='uploader?.queue?.length'>\\n\\n      <h3>Upload queue</h3>\\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n      <table class=\\\"table\\\">\\n          <thead>\\n          <tr>\\n              <th width=\\\"50%\\\">Name</th>\\n              <th>Size</th>\\n          </tr>\\n          </thead>\\n          <tbody>\\n          <tr *ngFor=\\\"let item of uploader.queue\\\">\\n              <td><strong>{{ item?.file?.name }}</strong></td>\\n              <td nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n          </tr>\\n          </tbody>\\n      </table>\\n\\n      <div>\\n          <div>\\n              Queue progress:\\n              <div class=\\\"progress\\\">\\n                  <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n              </div>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n                  (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n              <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\n                  (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n              <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                  (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n              <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove\\n          </button>\\n      </div>\\n\\n  </div>\\n\\n</div>\"","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Photo } from '../../models/Photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { AuthService } from '../../services/auth.service';\nimport { environment } from '../../../environments/environment';\nimport { UserService } from '../../services/user.service';\nimport { AlertifyService } from '../../services/alertify.service';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  public uploader: FileUploader;\n  public hasBaseDropZoneOver = false;\n  public baseURL = environment.apiURL;\n  currentMain: Photo;\n\n  constructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseURL + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain\n        };\n        this.photos.push(photo);\n        if (photo.isMain) {\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoURL = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n        }\n      }\n    };\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n      this.currentMain.isMain = false;\n      photo.isMain = true;\n      this.authService.changeMemberPhoto(photo.url);\n      this.authService.currentUser.photoURL = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  deletePhoto(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this photo??', () => {\n      this.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\n        this.photos.splice(this.photos.findIndex(p => p.id === id));\n        this.alertify.success('Photo deleted successfully');\n      }, error => {\n        this.alertify.error('Failed to delete photo');\n      });\n    });\n  }\n\n\n}\n","module.exports = \"table {\\n    margin-top: 15px;\\n  }\\n  \\n  .rounded-circle {\\n    max-height: 50px;\\n  }\\n  \\n  .table > tbody > tr > td {\\n    vertical-align: middle;\\n  }\\n  \"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row py-3\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope\\\"></i> Unread\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\n    <h3>No messages</h3>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\n    <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n      <tr>\\n        <th style=\\\"width: 40%\\\">Message</th>\\n        <th style=\\\"width: 20%\\\">From / To</th>\\n        <th style=\\\"width: 20%\\\">Sent / Received</th>\\n        <th style=\\\"width: 20%\\\"></th>\\n      </tr>\\n      <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"['/members', \\n        messageContainer == 'Outbox' ? message.recipientId : message.senderId]\\\" [queryParams]=\\\"{tab:'3'}\\\">\\n        <td>{{message.content}}</td>\\n        <td>\\n          <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\n            <img [src]=\\\"message.senderPhotoUrl\\\" class=\\\"rounded-circle\\\">\\n            <strong>{{message.senderKnownAs}}</strong>\\n          </div>\\n          <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\n            <img [src]=\\\"message.recipientPhotoUrl\\\" class=\\\"rounded-circle\\\">\\n            <strong>{{message.recipientKnownAs}}</strong>\\n          </div>\\n        </td>\\n        <td>{{message.messageSent | timeAgo}}</td>\\n        <td>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n\\n    <div class=\\\"container py-3\\\" *ngIf=\\\"pagination.totalItems > pagination.itemsPerPage\\\">\\n      <div class=\\\"text-center\\\">\\n        <pagination class=\\\"d-inline-flex\\\" [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" (pageChanged)=\\\"pageChanged($event)\\\"\\n          [itemsPerPage]=\\\"pagination.itemsPerPage\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n\\n\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../models/Message';\nimport { Pagination, PaginatedResult } from '../models/Pagination';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { Resolve, Router, ActivatedRouteSnapshot, RouterStateSnapshot, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService,\n    private authService: AuthService\n) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.decodedToken.nameid,\n      this.pagination.currentPage, this.pagination.itemsPerPage, this.messageContainer)\n      .subscribe((res: PaginatedResult<Message[]>) => {\n        this.messages = res.result;\n        this.pagination = res.pagination;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this mesage????', () => {\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(() => {\n        this.messages.splice(_.findIndex(this.messages, {id: id}), 1);\n        this.alertify.success('The message has been deleted');\n      }, error => {\n        this.alertify.error('Error while deleting the message');\n      });\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n}\n","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalpages: number;\n}\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}\n","module.exports = \".dropdown-menu, .dropdown-toggle {\\n    cursor: pointer;\\n}\\n\\n.dropdown-item :hover{\\n    color:white;\\n}\\n\\nimg {\\n    max-height: 50px;\\n    border: 2px solid white;\\n    display: inline;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg sticky-top navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\" routerLinkActive=\\\"router-link-active\\\" >Hook-Me-Up</a>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbar\\\" >\\n    <ul class=\\\"navbar-nav mr-auto\\\" *ngIf=\\\"loggedIn()\\\">\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\" routerLinkActive=\\\"router-link-active\\\" >Matches</a></li>\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\" routerLinkActive=\\\"router-link-active\\\" >Lists</a></li>\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\" routerLinkActive=\\\"router-link-active\\\" >Messages</a></li>\\n    </ul>\\n\\n    <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-right\\\">\\n      <li>\\n        <img src=\\\"{{photoUrl}}\\\" alt=\\\"\\\">\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\" dropdown>\\n        <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"dropdown01\\\" dropdownToggle>Welcome {{authService.decodedToken?.unique_name | titlecase}}</a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown01\\\" *dropdownMenu>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\" routerLinkActive=\\\"router-link-active\\\" >Edit profile</a>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </div>\\n      </li>\\n    </ul>\\n\\n    <form #loginForm=\\\"ngForm\\\" *ngIf=\\\"!loggedIn()\\\" class=\\\"form-inline ml-auto my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" required name=\\\"username\\\" [(ngModel)]=\\\"model.Username\\\" aria-label=\\\"Search\\\">\\n      <input class=\\\"form-control mr-sm-2\\\"  type=\\\"password\\\" placeholder=\\\"Password\\\" required name=\\\"password\\\" [(ngModel)]=\\\"model.Password\\\" aria-label=\\\"Search\\\">\\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Sign In</button>\\n    </form>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  photoUrl: string;\n\n  constructor(public authService: AuthService, public alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => {\n      this.photoUrl = photoUrl;\n    });\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(data => {\n      this.alertify.success('Logged in succesfully');\n    }, error => {\n      this.alertify.error('Failed to login user');\n    }, () => {\n      this.router.navigate(['/messages']);\n    });\n  }\n\n  logout() {\n    this.authService.userToken = null;\n    this.authService.currentUser = null;\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.alertify.message('logged out successfully');\n    this.router.navigate(['/home']);\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n}\n","module.exports = \".form-label-group {\\n    width: 50%;\\n    margin-left: 17rem;\\n}\\n\\nspan {\\n    text-align: left;\\n}\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\" class=\\\"d-flex w-10 h-100 p-5 mx-auto flex-column text-center form-signin\\\">\\n  <div class=\\\"text-center mb-2\\\">\\n    <h1 class=\\\"mb-3 font-weight-normal\\\">Get started. Sign up below</h1>\\n    <hr />\\n  </div>\\n\\n  <div class=\\\"form-group mb-2\\\">\\n    <label class=\\\"control-label\\\" style=\\\"margin-right:5px\\\">I am a: </label>\\n    <label class=\\\"radio-inline\\\">\\n      <input type=\\\"radio\\\" value=\\\"male\\\" style=\\\"margin-right:5px\\\" formControlName=\\\"gender\\\">Male\\n    </label>\\n    <label class=\\\"radio-inline\\\">\\n      <input type=\\\"radio\\\" value=\\\"female\\\" style=\\\"margin-right:5px\\\" formControlName=\\\"gender\\\">Female\\n    </label>\\n  </div>\\n\\n  <div class=\\\"form-label-group mb-2\\\">\\n    <input type=\\\"email\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched}\\\">\\n    <span class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('username').hasError('required') && registerForm.get('username').touched\\\">\\n      Username is required\\n    </span>\\n  </div>\\n\\n  <div class=\\\"form-label-group mb-2\\\">\\n    <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\\\"\\n      placeholder=\\\"Password\\\">\\n    <span class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('required') && registerForm.get('username').touched\\\">\\n      Password is required\\n    </span>\\n    <span class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('minlength') && registerForm.get('username').touched\\\">\\n      Password must be atleast 4 characters\\n    </span>\\n    <span class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('maxlength') && registerForm.get('username').touched\\\">\\n      Password cannot exceed 8 characters\\n    </span>\\n  </div>\\n\\n  <div class=\\\"form-label-group mb-2\\\">\\n    <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors \\n        && registerForm.get('confirmPassword').touched || registerForm.getError('mismatch') && registerForm.get('confirmPassword').touched}\\\"\\n      placeholder=\\\"Confirm Password\\\">\\n    <span class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') && registerForm.get('confirmPassword').touched\\\">\\n      This is required\\n    </span>\\n    <span class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.getError('mismatch') && registerForm.get('confirmPassword').touched\\\">\\n      Confirm password must match password\\n    </span>\\n  </div>\\n\\n  <div class=\\\"form-label-group mb-2\\\">\\n    <input class=\\\"form-control\\\" placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')}\\\">\\n    <span class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">\\n      Known as is required\\n    </span>\\n  </div>\\n\\n  <div class=\\\"form-label-group mb-2\\\">\\n    <input class=\\\"form-control\\\" type=\\\"text\\\" bsDatepicker placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')}\\\">\\n    <span class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">\\n      Date of birth is required\\n    </span>\\n  </div>\\n\\n  <div class=\\\"form-label-group mb-2\\\">\\n    <input class=\\\"form-control\\\" placeholder=\\\"City\\\" formControlName=\\\"city\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('city').touched && registerForm.get('city').hasError('required')}\\\">\\n    <span class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">\\n      City is required\\n    </span>\\n  </div>\\n\\n  <div class=\\\"form-label-group mb-2\\\">\\n    <input class=\\\"form-control\\\" placeholder=\\\"Country\\\" formControlName=\\\"country\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('country').touched && registerForm.get('country').hasError('required')}\\\">\\n    <span class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">\\n      Country is required\\n    </span>\\n  </div>\\n\\n  <div>\\n    <button class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\">Sign up</button>\\n    <button class=\\\"btn btn-lg btn-danger\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n\\n  <!-- <p>\\n    {{registerForm.value | json}}\\n  </p> -->\\n</form>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder} from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from '../models/User';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  bsConfig: Partial<BsDatepickerConfig>;\n  user: User;\n  registerForm: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(4),\n            Validators.maxLength(8)\n          ]\n        ],\n        confirmPassword: ['', Validators.required],\n        gender: ['male'],\n        knownAs: ['', Validators.required],\n        dateOfBirth: [null, Validators.required],\n        city: ['', Validators.required],\n        country: ['', Validators.required]\n      },\n      {\n        validator: this.passwordMatchValidator\n      }\n    );\n  }\n\n  passwordMatchValidator(grp: FormGroup) {\n    return grp.get('password').value === grp.get('confirmPassword').value\n      ? null\n      : { mismatch: true };\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n      this.authService.register(this.user).subscribe(() => {\n        this.alertify.success('Registration success!');\n      }, error => {\n        this.alertify.error(error);\n      }, () => {\n        this.authService.login(this.user).subscribe(() => {\n          this.router.navigate(['/members']);\n        });\n      });\n    }\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","import { User } from '../models/User';\nimport { Resolve, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ListsResolver implements Resolve<User[]> {\n    pageSize = 5;\n    pageNumber = 1;\n    likesParam = 'Likers';\n\n    constructor(private userService: UserService, private router: Router, private alertifyService: AlertifyService) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\n        return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\n            catchError(error => {\n                this.alertifyService.error('Problem retrieving data');\n                this.router.navigate(['/home']);\n                return of(null);\n            })\n        );\n    }\n}\n","import { User } from '../models/User';\nimport { Resolve, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class MemberDetailResolver implements Resolve<User> {\n    constructor(private userService: UserService, private router: Router, private alertifyService: AlertifyService) {}\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\n        return this.userService.getUser(route.params['id']).pipe(\n            catchError(error => {\n            this.alertifyService.error('Problem retreiving data');\n            this.router.navigate(['/members/']);\n            return of(null);\n        }));\n\n    }\n}\n","import { User } from '../models/User';\nimport { Resolve, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { AuthService } from '../services/auth.service';\nimport { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class MemberEditResolver implements Resolve<User> {\n    constructor(private userService: UserService,\n        private router: Router,\n        private alertifyService: AlertifyService,\n        private authService: AuthService) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\n        return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\n            catchError(error => {\n            this.alertifyService.error('Problem retreiving data');\n            this.router.navigate(['/home/']);\n            return of(null);\n        }));\n\n    }\n}\n","import { User } from '../models/User';\nimport { Resolve, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class MemberListResolver implements Resolve<User[]> {\n    pageSize = 5;\n    pageNumber = 1;\n\n    constructor(private userService: UserService, private router: Router, private alertifyService: AlertifyService) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\n        return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\n            catchError(error => {\n            this.alertifyService.error('Problem retreiving data');\n            this.router.navigate(['/home']);\n            return of(null);\n        }));\n    }\n}\n","import { Resolve, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { AuthService } from '../services/auth.service';\nimport { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Message } from '../models/Message';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class MessagesResolver implements Resolve<Message[]> {\n    pageSize = 5;\n    pageNumber = 1;\n    messageContainer = 'Unread';\n\n    constructor(\n        private userService: UserService,\n        private router: Router,\n        private alertifyService: AlertifyService,\n        private authService: AuthService\n    ) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\n        debugger;\n        return this.userService.getMessages(this.authService.decodedToken.nameid, this.pageNumber, this.pageSize, this.messageContainer)\n        .pipe(catchError(error => {\n            this.alertifyService.error('Problem retreiving data');\n            this.router.navigate(['/members']);\n            return of(null);\n        }));\n    }\n}\n","import { Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { AuthGuard } from './guard/auth.guard';\nimport { PreventUnsavedChanges } from './guard/prevent-unsaved-changes.guard';\nimport { MemberDetailResolver } from './resolvers/member-detail.resolver';\nimport { MemberListResolver } from './resolvers/member-list.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './resolvers/member-edit.resolver';\nimport { ListsResolver } from './resolvers/lists.resolver';\nimport { MessagesResolver } from './resolvers/message.resolver';\n\nexport const appRoutes: Routes = [\n    { path: '', redirectTo: 'home', pathMatch: 'full'},\n    {path: 'home', component: HomeComponent},\n    {\n        path: '',\n        runGuardsAndResolvers: 'always',\n        canActivate: [AuthGuard],\n        children: [\n            {path: 'members', component: MemberListComponent, resolve: {users: MemberListResolver}},\n            {path: 'members/:id', component: MemberDetailComponent, resolve: {user: MemberDetailResolver}},\n            {\n                path: 'member/edit',\n                component: MemberEditComponent,\n                canDeactivate: [PreventUnsavedChanges],\n                resolve: {user: MemberEditResolver}\n            },\n            {path: 'messages', component: MessagesComponent, resolve: {messages: MessagesResolver}},\n            {path: 'lists', component: ListsComponent, resolve: {users: ListsResolver}}\n        ]\n    },\n    {path: '**', redirectTo: 'home', pathMatch: 'full'}\n];\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable()\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallBack: () => any) {\n    alertify.confirm(message, function(e) {\n      if (e) {\n        okCallBack();\n      } else {\n      }\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/User';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthUser } from '../models/AuthUser';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    baseURL = 'http://localhost:5000/api/auth/';\n    defaultPhotoUrl = '../../assets/user.png';\n    userToken: any;\n    decodedToken: any;\n    currentUser: User;\n    private photoUrl = new BehaviorSubject<string>(this.defaultPhotoUrl);\n    currentPhotoUrl = this.photoUrl.asObservable();\n\n    constructor(private http: HttpClient, private jwtHelperService: JwtHelperService) { }\n\n    changeMemberPhoto(photoUrl: string) {\n        this.photoUrl.next(photoUrl);\n    }\n\n    login(model: any) {\n        return this.http.post<AuthUser>(this.baseURL + 'login', model).pipe(\n            map(user => {\n                if (user) {\n                    localStorage.setItem('token', user.tokenString);\n                    localStorage.setItem('user', JSON.stringify(user.user));\n                    this.userToken = user.tokenString;\n                    this.decodedToken = this.jwtHelperService.decodeToken(this.userToken);\n                    this.currentUser = user.user;\n                    console.log(this.decodedToken);\n                    if (this.currentUser.photoURL != null) {\n                        this.changeMemberPhoto(this.currentUser.photoURL);\n                    } else {\n                        this.changeMemberPhoto(this.defaultPhotoUrl);\n                    }\n                }\n            }\n        ));\n    }\n\n    register(user: User) {\n        return this.http.post(this.baseURL + 'register', user);\n    }\n\n    loggedIn() {\n        const token = this.jwtHelperService.tokenGetter();\n\n        if (!token) {\n            return false;\n        }\n\n        return !this.jwtHelperService.isTokenExpired(token);\n    }\n}\n","import { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injectable, InjectionToken } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      catchError(error => {\n        const applicationError = error.headers.get('Application-Error');\n\n        if (applicationError) {\n          console.error(applicationError);\n          return throwError(applicationError);\n        }\n        const serverError = error.error;\n        let modelStateErrors = '';\n        if (serverError && typeof serverError === 'object') {\n          for (const key in serverError) {\n            if (serverError[key]) {\n              modelStateErrors += serverError[key] + '\\n';\n            }\n          }\n        } else {\n          modelStateErrors = 'Internal Server Error';\n        }\n        return throwError(modelStateErrors || serverError || 'Server Error');\n      })\n    );\n  }\n}\n\nexport const ErrorInterceptorProvider = {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true\n};\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment.prod';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/User';\nimport { PaginatedResult } from '../models/Pagination';\nimport { Message } from '../models/Message';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    baseURL = environment.apiURL;\n    constructor(private authHttp: HttpClient) { }\n\n    getUsers(page?, itemsPerPage?, userParams?: any, likeParams?: string) {\n        const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n        let params = new HttpParams();\n\n        if (page != null && itemsPerPage != null) {\n            params = params.append('pageNumber', page);\n            params = params.append('pageSize', itemsPerPage);\n        }\n\n        if (likeParams === 'Likers') {\n            params = params.append('Likers', 'true');\n        } else if (likeParams === 'Likees') {\n            params = params.append('Likees', 'true');\n        }\n\n        if (userParams != null) {\n            params = params.append('minAge', userParams.minAge);\n            params = params.append('maxAge', userParams.maxAge);\n            params = params.append('gender', userParams.gender);\n            params = params.append('orderBy', userParams.orderBy);\n        }\n\n        return this.authHttp\n            .get<User[]>(this.baseURL + 'users', {observe: 'response', params })\n            .pipe(map(response => {\n                paginatedResult.result = response.body;\n\n                if (response.headers.get('Pagination') != null) {\n                    paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n                }\n\n                return paginatedResult;\n            }));\n    }\n\n    getUser(id): Observable<User> {\n        return this.authHttp.get<User>(this.baseURL + 'users/' + id);\n    }\n\n    updateUser(id: number, user: User) {\n        return this.authHttp.put(this.baseURL + 'users/' + id, user);\n    }\n\n    setMainPhoto(userId: number, Id: number) {\n        return this.authHttp.post(this.baseURL + 'users/' + userId + '/photos/' + Id + '/setMain', {});\n    }\n\n    deletePhoto(userId: number, Id: number) {\n        return this.authHttp.delete(this.baseURL + 'users/' + userId + '/photos/' + Id);\n    }\n\n    sendLike(id: number, recipientId: number) {\n        return this.authHttp.post(this.baseURL + 'users/' + id + '/like/' + recipientId, {});\n    }\n\n    getMessages(id, page?, itemsPerPage?, messageContainer?: string) {\n        // debugger;\n        const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n\n        let params = new HttpParams();\n\n        params = params.append('MessageContainer', messageContainer);\n\n        if (page != null && itemsPerPage != null) {\n            params = params.append('pageNumber', page).append('itemsPerPage', itemsPerPage);\n        }\n        return this.authHttp.get<Message[]>(this.baseURL + 'users/' + id + '/messages', { observe: 'response', params })\n            .pipe(map(response => {\n                paginatedResult.result = response.body;\n                if (response.headers.get('Pagination') != null) {\n                    paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n                }\n                return paginatedResult;\n            }));\n\n    }\n\n    getMessagesThread(id: number, recipientId: number) {\n        return this.authHttp.get<Message[]>(this.baseURL + 'users/' + id + '/messages/thread/' + recipientId);\n    }\n\n    sendMessage(id: number, message: Message) {\n      return this.authHttp.post<Message>(this.baseURL + 'users/' + id + '/messages/', message);\n    }\n\n    deleteMessage(id: number, userId: number) {\n        return this.authHttp.post(this.baseURL + 'users/' + userId + '/messages/' + id, {});\n    }\n\n    markAsRead(id: number, userId: number) {\n        this.authHttp.post(this.baseURL + 'users/' + userId + '/messages/' + id + '/read', {}).subscribe();\n    }\n}\n","export const environment = {\n  production: true,\n  apiURL: 'http://localhost:5000/api/'\n};\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:5000/api/'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}